#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlowerShop
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_flowershop")]
	public partial class db_flowerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void Insertsupplier(supplier instance);
    partial void Updatesupplier(supplier instance);
    partial void Deletesupplier(supplier instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertcolor(color instance);
    partial void Updatecolor(color instance);
    partial void Deletecolor(color instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertemp_permission(emp_permission instance);
    partial void Updateemp_permission(emp_permission instance);
    partial void Deleteemp_permission(emp_permission instance);
    partial void Insertemp_role(emp_role instance);
    partial void Updateemp_role(emp_role instance);
    partial void Deleteemp_role(emp_role instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertflower_category(flower_category instance);
    partial void Updateflower_category(flower_category instance);
    partial void Deleteflower_category(flower_category instance);
    partial void Insertflower_color(flower_color instance);
    partial void Updateflower_color(flower_color instance);
    partial void Deleteflower_color(flower_color instance);
    partial void Insertflower_image(flower_image instance);
    partial void Updateflower_image(flower_image instance);
    partial void Deleteflower_image(flower_image instance);
    partial void Insertflower_occasion(flower_occasion instance);
    partial void Updateflower_occasion(flower_occasion instance);
    partial void Deleteflower_occasion(flower_occasion instance);
    partial void Insertflower_style(flower_style instance);
    partial void Updateflower_style(flower_style instance);
    partial void Deleteflower_style(flower_style instance);
    partial void Insertflower_supply(flower_supply instance);
    partial void Updateflower_supply(flower_supply instance);
    partial void Deleteflower_supply(flower_supply instance);
    partial void Insertflower(flower instance);
    partial void Updateflower(flower instance);
    partial void Deleteflower(flower instance);
    partial void Insertinventory(inventory instance);
    partial void Updateinventory(inventory instance);
    partial void Deleteinventory(inventory instance);
    partial void Insertoccasion(occasion instance);
    partial void Updateoccasion(occasion instance);
    partial void Deleteoccasion(occasion instance);
    partial void Insertorder_detail(order_detail instance);
    partial void Updateorder_detail(order_detail instance);
    partial void Deleteorder_detail(order_detail instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void Insertpayment(payment instance);
    partial void Updatepayment(payment instance);
    partial void Deletepayment(payment instance);
    partial void Insertpromotion_flower(promotion_flower instance);
    partial void Updatepromotion_flower(promotion_flower instance);
    partial void Deletepromotion_flower(promotion_flower instance);
    partial void Insertpromotion_usage(promotion_usage instance);
    partial void Updatepromotion_usage(promotion_usage instance);
    partial void Deletepromotion_usage(promotion_usage instance);
    partial void Insertpromotion(promotion instance);
    partial void Updatepromotion(promotion instance);
    partial void Deletepromotion(promotion instance);
    partial void Insertreturn_detail(return_detail instance);
    partial void Updatereturn_detail(return_detail instance);
    partial void Deletereturn_detail(return_detail instance);
    partial void Insertreturn(@return instance);
    partial void Updatereturn(@return instance);
    partial void Deletereturn(@return instance);
    partial void Insertreview(review instance);
    partial void Updatereview(review instance);
    partial void Deletereview(review instance);
    partial void Insertstyle(style instance);
    partial void Updatestyle(style instance);
    partial void Deletestyle(style instance);
    #endregion
		
		public db_flowerDataContext() : 
				base(global::FlowerShop.Properties.Settings.Default.db_flowershopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public db_flowerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public db_flowerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public db_flowerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public db_flowerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<supplier> suppliers
		{
			get
			{
				return this.GetTable<supplier>();
			}
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<color> colors
		{
			get
			{
				return this.GetTable<color>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<emp_permission> emp_permissions
		{
			get
			{
				return this.GetTable<emp_permission>();
			}
		}
		
		public System.Data.Linq.Table<emp_role> emp_roles
		{
			get
			{
				return this.GetTable<emp_role>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<flower_category> flower_categories
		{
			get
			{
				return this.GetTable<flower_category>();
			}
		}
		
		public System.Data.Linq.Table<flower_color> flower_colors
		{
			get
			{
				return this.GetTable<flower_color>();
			}
		}
		
		public System.Data.Linq.Table<flower_image> flower_images
		{
			get
			{
				return this.GetTable<flower_image>();
			}
		}
		
		public System.Data.Linq.Table<flower_occasion> flower_occasions
		{
			get
			{
				return this.GetTable<flower_occasion>();
			}
		}
		
		public System.Data.Linq.Table<flower_style> flower_styles
		{
			get
			{
				return this.GetTable<flower_style>();
			}
		}
		
		public System.Data.Linq.Table<flower_supply> flower_supplies
		{
			get
			{
				return this.GetTable<flower_supply>();
			}
		}
		
		public System.Data.Linq.Table<flower> flowers
		{
			get
			{
				return this.GetTable<flower>();
			}
		}
		
		public System.Data.Linq.Table<inventory> inventories
		{
			get
			{
				return this.GetTable<inventory>();
			}
		}
		
		public System.Data.Linq.Table<occasion> occasions
		{
			get
			{
				return this.GetTable<occasion>();
			}
		}
		
		public System.Data.Linq.Table<order_detail> order_details
		{
			get
			{
				return this.GetTable<order_detail>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<payment> payments
		{
			get
			{
				return this.GetTable<payment>();
			}
		}
		
		public System.Data.Linq.Table<promotion_flower> promotion_flowers
		{
			get
			{
				return this.GetTable<promotion_flower>();
			}
		}
		
		public System.Data.Linq.Table<promotion_usage> promotion_usages
		{
			get
			{
				return this.GetTable<promotion_usage>();
			}
		}
		
		public System.Data.Linq.Table<promotion> promotions
		{
			get
			{
				return this.GetTable<promotion>();
			}
		}
		
		public System.Data.Linq.Table<return_detail> return_details
		{
			get
			{
				return this.GetTable<return_detail>();
			}
		}
		
		public System.Data.Linq.Table<@return> returns
		{
			get
			{
				return this.GetTable<@return>();
			}
		}
		
		public System.Data.Linq.Table<review> reviews
		{
			get
			{
				return this.GetTable<review>();
			}
		}
		
		public System.Data.Linq.Table<style> styles
		{
			get
			{
				return this.GetTable<style>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.accounts")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _account_id;
		
		private string _username;
		
		private string _password;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private string _status;
		
		private EntitySet<customer> _customers;
		
		private EntitySet<employee> _employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaccount_idChanging(string value);
    partial void Onaccount_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public account()
		{
			this._customers = new EntitySet<customer>(new Action<customer>(this.attach_customers), new Action<customer>(this.detach_customers));
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string account_id
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					this.Onaccount_idChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("account_id");
					this.Onaccount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_customer", Storage="_customers", ThisKey="account_id", OtherKey="account_id")]
		public EntitySet<customer> customers
		{
			get
			{
				return this._customers;
			}
			set
			{
				this._customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_employee", Storage="_employees", ThisKey="account_id", OtherKey="account_id")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.suppliers")]
	public partial class supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _supplier_id;
		
		private string _name;
		
		private string _contact;
		
		private string _address;
		
		private EntitySet<flower_supply> _flower_supplies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsupplier_idChanging(string value);
    partial void Onsupplier_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public supplier()
		{
			this._flower_supplies = new EntitySet<flower_supply>(new Action<flower_supply>(this.attach_flower_supplies), new Action<flower_supply>(this.detach_flower_supplies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="NVarChar(50)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_flower_supply", Storage="_flower_supplies", ThisKey="supplier_id", OtherKey="supplier_id")]
		public EntitySet<flower_supply> flower_supplies
		{
			get
			{
				return this._flower_supplies;
			}
			set
			{
				this._flower_supplies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flower_supplies(flower_supply entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_flower_supplies(flower_supply entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categories")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _category_id;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<flower_category> _flower_categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(string value);
    partial void Oncategory_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public category()
		{
			this._flower_categories = new EntitySet<flower_category>(new Action<flower_category>(this.attach_flower_categories), new Action<flower_category>(this.detach_flower_categories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_flower_category", Storage="_flower_categories", ThisKey="category_id", OtherKey="category_id")]
		public EntitySet<flower_category> flower_categories
		{
			get
			{
				return this._flower_categories;
			}
			set
			{
				this._flower_categories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flower_categories(flower_category entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_flower_categories(flower_category entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.colors")]
	public partial class color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _color_id;
		
		private string _name;
		
		private EntitySet<flower_color> _flower_colors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncolor_idChanging(string value);
    partial void Oncolor_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public color()
		{
			this._flower_colors = new EntitySet<flower_color>(new Action<flower_color>(this.attach_flower_colors), new Action<flower_color>(this.detach_flower_colors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					this.Oncolor_idChanging(value);
					this.SendPropertyChanging();
					this._color_id = value;
					this.SendPropertyChanged("color_id");
					this.Oncolor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="color_flower_color", Storage="_flower_colors", ThisKey="color_id", OtherKey="color_id")]
		public EntitySet<flower_color> flower_colors
		{
			get
			{
				return this._flower_colors;
			}
			set
			{
				this._flower_colors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flower_colors(flower_color entity)
		{
			this.SendPropertyChanging();
			entity.color = this;
		}
		
		private void detach_flower_colors(flower_color entity)
		{
			this.SendPropertyChanging();
			entity.color = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customers")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_id;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private string _address;
		
		private string _account_id;
		
		private EntitySet<order> _orders;
		
		private EntitySet<promotion_usage> _promotion_usages;
		
		private EntitySet<@return> _returns;
		
		private EntitySet<review> _reviews;
		
		private EntityRef<account> _account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onaccount_idChanging(string value);
    partial void Onaccount_idChanged();
    #endregion
		
		public customer()
		{
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._promotion_usages = new EntitySet<promotion_usage>(new Action<promotion_usage>(this.attach_promotion_usages), new Action<promotion_usage>(this.detach_promotion_usages));
			this._returns = new EntitySet<@return>(new Action<@return>(this.attach_returns), new Action<@return>(this.detach_returns));
			this._reviews = new EntitySet<review>(new Action<review>(this.attach_reviews), new Action<review>(this.detach_reviews));
			this._account = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NChar(12)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_id", DbType="NVarChar(10)")]
		public string account_id
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaccount_idChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("account_id");
					this.Onaccount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_orders", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_promotion_usage", Storage="_promotion_usages", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<promotion_usage> promotion_usages
		{
			get
			{
				return this._promotion_usages;
			}
			set
			{
				this._promotion_usages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_return", Storage="_returns", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<@return> returns
		{
			get
			{
				return this._returns;
			}
			set
			{
				this._returns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_review", Storage="_reviews", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<review> reviews
		{
			get
			{
				return this._reviews;
			}
			set
			{
				this._reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_customer", Storage="_account", ThisKey="account_id", OtherKey="account_id", IsForeignKey=true, DeleteRule="SET NULL")]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.customers.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.customers.Add(this);
						this._account_id = value.account_id;
					}
					else
					{
						this._account_id = default(string);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_promotion_usages(promotion_usage entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_promotion_usages(promotion_usage entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_returns(@return entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_returns(@return entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emp_permissions")]
	public partial class emp_permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _perm_id;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<emp_role> _emp_roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onperm_idChanging(string value);
    partial void Onperm_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public emp_permission()
		{
			this._emp_roles = new EntitySet<emp_role>(new Action<emp_role>(this.attach_emp_roles), new Action<emp_role>(this.detach_emp_roles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_perm_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string perm_id
		{
			get
			{
				return this._perm_id;
			}
			set
			{
				if ((this._perm_id != value))
				{
					this.Onperm_idChanging(value);
					this.SendPropertyChanging();
					this._perm_id = value;
					this.SendPropertyChanged("perm_id");
					this.Onperm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="emp_permission_emp_role", Storage="_emp_roles", ThisKey="perm_id", OtherKey="perm_id")]
		public EntitySet<emp_role> emp_roles
		{
			get
			{
				return this._emp_roles;
			}
			set
			{
				this._emp_roles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_emp_roles(emp_role entity)
		{
			this.SendPropertyChanging();
			entity.emp_permission = this;
		}
		
		private void detach_emp_roles(emp_role entity)
		{
			this.SendPropertyChanging();
			entity.emp_permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emp_role")]
	public partial class emp_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _employee_id;
		
		private string _perm_id;
		
		private EntityRef<emp_permission> _emp_permission;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_idChanging(string value);
    partial void Onemployee_idChanged();
    partial void Onperm_idChanging(string value);
    partial void Onperm_idChanged();
    #endregion
		
		public emp_role()
		{
			this._emp_permission = default(EntityRef<emp_permission>);
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_perm_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string perm_id
		{
			get
			{
				return this._perm_id;
			}
			set
			{
				if ((this._perm_id != value))
				{
					if (this._emp_permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperm_idChanging(value);
					this.SendPropertyChanging();
					this._perm_id = value;
					this.SendPropertyChanged("perm_id");
					this.Onperm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="emp_permission_emp_role", Storage="_emp_permission", ThisKey="perm_id", OtherKey="perm_id", IsForeignKey=true)]
		public emp_permission emp_permission
		{
			get
			{
				return this._emp_permission.Entity;
			}
			set
			{
				emp_permission previousValue = this._emp_permission.Entity;
				if (((previousValue != value) 
							|| (this._emp_permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._emp_permission.Entity = null;
						previousValue.emp_roles.Remove(this);
					}
					this._emp_permission.Entity = value;
					if ((value != null))
					{
						value.emp_roles.Add(this);
						this._perm_id = value.perm_id;
					}
					else
					{
						this._perm_id = default(string);
					}
					this.SendPropertyChanged("emp_permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_emp_role", Storage="_employee", ThisKey="employee_id", OtherKey="employee_id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.emp_roles.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.emp_roles.Add(this);
						this._employee_id = value.employee_id;
					}
					else
					{
						this._employee_id = default(string);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _employee_id;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private string _address;
		
		private string _account_id;
		
		private EntitySet<emp_role> _emp_roles;
		
		private EntitySet<@return> _returns;
		
		private EntityRef<account> _account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_idChanging(string value);
    partial void Onemployee_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onaccount_idChanging(string value);
    partial void Onaccount_idChanged();
    #endregion
		
		public employee()
		{
			this._emp_roles = new EntitySet<emp_role>(new Action<emp_role>(this.attach_emp_roles), new Action<emp_role>(this.detach_emp_roles));
			this._returns = new EntitySet<@return>(new Action<@return>(this.attach_returns), new Action<@return>(this.detach_returns));
			this._account = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NChar(12)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_id", DbType="NVarChar(10)")]
		public string account_id
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaccount_idChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("account_id");
					this.Onaccount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_emp_role", Storage="_emp_roles", ThisKey="employee_id", OtherKey="employee_id")]
		public EntitySet<emp_role> emp_roles
		{
			get
			{
				return this._emp_roles;
			}
			set
			{
				this._emp_roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_return", Storage="_returns", ThisKey="employee_id", OtherKey="processed_by")]
		public EntitySet<@return> returns
		{
			get
			{
				return this._returns;
			}
			set
			{
				this._returns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_employee", Storage="_account", ThisKey="account_id", OtherKey="account_id", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._account_id = value.account_id;
					}
					else
					{
						this._account_id = default(string);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_emp_roles(emp_role entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_emp_roles(emp_role entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_returns(@return entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_returns(@return entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flower_categories")]
	public partial class flower_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _flower_id;
		
		private string _category_id;
		
		private EntityRef<category> _category;
		
		private EntityRef<flower> _flower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void Oncategory_idChanging(string value);
    partial void Oncategory_idChanged();
    #endregion
		
		public flower_category()
		{
			this._category = default(EntityRef<category>);
			this._flower = default(EntityRef<flower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_flower_category", Storage="_category", ThisKey="category_id", OtherKey="category_id", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.flower_categories.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.flower_categories.Add(this);
						this._category_id = value.category_id;
					}
					else
					{
						this._category_id = default(string);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_category", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.flower_categories.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.flower_categories.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flower_colors")]
	public partial class flower_color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _flower_id;
		
		private string _color_id;
		
		private EntityRef<color> _color;
		
		private EntityRef<flower> _flower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void Oncolor_idChanging(string value);
    partial void Oncolor_idChanged();
    #endregion
		
		public flower_color()
		{
			this._color = default(EntityRef<color>);
			this._flower = default(EntityRef<flower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					if (this._color.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncolor_idChanging(value);
					this.SendPropertyChanging();
					this._color_id = value;
					this.SendPropertyChanged("color_id");
					this.Oncolor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="color_flower_color", Storage="_color", ThisKey="color_id", OtherKey="color_id", IsForeignKey=true)]
		public color color
		{
			get
			{
				return this._color.Entity;
			}
			set
			{
				color previousValue = this._color.Entity;
				if (((previousValue != value) 
							|| (this._color.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._color.Entity = null;
						previousValue.flower_colors.Remove(this);
					}
					this._color.Entity = value;
					if ((value != null))
					{
						value.flower_colors.Add(this);
						this._color_id = value.color_id;
					}
					else
					{
						this._color_id = default(string);
					}
					this.SendPropertyChanged("color");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_color", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.flower_colors.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.flower_colors.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flower_images")]
	public partial class flower_image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _image_id;
		
		private string _flower_id;
		
		private string _image_url;
		
		private string _image_type;
		
		private System.Nullable<int> _display_order;
		
		private EntityRef<flower> _flower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onimage_idChanging(string value);
    partial void Onimage_idChanged();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    partial void Onimage_typeChanging(string value);
    partial void Onimage_typeChanged();
    partial void Ondisplay_orderChanging(System.Nullable<int> value);
    partial void Ondisplay_orderChanged();
    #endregion
		
		public flower_image()
		{
			this._flower = default(EntityRef<flower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string image_id
		{
			get
			{
				return this._image_id;
			}
			set
			{
				if ((this._image_id != value))
				{
					this.Onimage_idChanging(value);
					this.SendPropertyChanging();
					this._image_id = value;
					this.SendPropertyChanged("image_id");
					this.Onimage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10)")]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_url", DbType="NVarChar(255)")]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_type", DbType="NVarChar(20)")]
		public string image_type
		{
			get
			{
				return this._image_type;
			}
			set
			{
				if ((this._image_type != value))
				{
					this.Onimage_typeChanging(value);
					this.SendPropertyChanging();
					this._image_type = value;
					this.SendPropertyChanged("image_type");
					this.Onimage_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display_order", DbType="Int")]
		public System.Nullable<int> display_order
		{
			get
			{
				return this._display_order;
			}
			set
			{
				if ((this._display_order != value))
				{
					this.Ondisplay_orderChanging(value);
					this.SendPropertyChanging();
					this._display_order = value;
					this.SendPropertyChanged("display_order");
					this.Ondisplay_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_image", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.flower_images.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.flower_images.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flower_occasions")]
	public partial class flower_occasion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _flower_id;
		
		private string _occasion_id;
		
		private EntityRef<flower> _flower;
		
		private EntityRef<occasion> _occasion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void Onoccasion_idChanging(string value);
    partial void Onoccasion_idChanged();
    #endregion
		
		public flower_occasion()
		{
			this._flower = default(EntityRef<flower>);
			this._occasion = default(EntityRef<occasion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occasion_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string occasion_id
		{
			get
			{
				return this._occasion_id;
			}
			set
			{
				if ((this._occasion_id != value))
				{
					if (this._occasion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onoccasion_idChanging(value);
					this.SendPropertyChanging();
					this._occasion_id = value;
					this.SendPropertyChanged("occasion_id");
					this.Onoccasion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_occasion", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.flower_occasions.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.flower_occasions.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="occasion_flower_occasion", Storage="_occasion", ThisKey="occasion_id", OtherKey="occasion_id", IsForeignKey=true)]
		public occasion occasion
		{
			get
			{
				return this._occasion.Entity;
			}
			set
			{
				occasion previousValue = this._occasion.Entity;
				if (((previousValue != value) 
							|| (this._occasion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._occasion.Entity = null;
						previousValue.flower_occasions.Remove(this);
					}
					this._occasion.Entity = value;
					if ((value != null))
					{
						value.flower_occasions.Add(this);
						this._occasion_id = value.occasion_id;
					}
					else
					{
						this._occasion_id = default(string);
					}
					this.SendPropertyChanged("occasion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flower_styles")]
	public partial class flower_style : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _flower_id;
		
		private string _style_id;
		
		private EntityRef<flower> _flower;
		
		private EntityRef<style> _style;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void Onstyle_idChanging(string value);
    partial void Onstyle_idChanged();
    #endregion
		
		public flower_style()
		{
			this._flower = default(EntityRef<flower>);
			this._style = default(EntityRef<style>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_style_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string style_id
		{
			get
			{
				return this._style_id;
			}
			set
			{
				if ((this._style_id != value))
				{
					if (this._style.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstyle_idChanging(value);
					this.SendPropertyChanging();
					this._style_id = value;
					this.SendPropertyChanged("style_id");
					this.Onstyle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_style", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.flower_styles.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.flower_styles.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="style_flower_style", Storage="_style", ThisKey="style_id", OtherKey="style_id", IsForeignKey=true)]
		public style style
		{
			get
			{
				return this._style.Entity;
			}
			set
			{
				style previousValue = this._style.Entity;
				if (((previousValue != value) 
							|| (this._style.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._style.Entity = null;
						previousValue.flower_styles.Remove(this);
					}
					this._style.Entity = value;
					if ((value != null))
					{
						value.flower_styles.Add(this);
						this._style_id = value.style_id;
					}
					else
					{
						this._style_id = default(string);
					}
					this.SendPropertyChanged("style");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flower_supplies")]
	public partial class flower_supply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _supplier_id;
		
		private string _flower_id;
		
		private System.DateTime _supply_date;
		
		private int _quantity;
		
		private decimal _price;
		
		private EntityRef<supplier> _supplier;
		
		private EntityRef<flower> _flower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsupplier_idChanging(string value);
    partial void Onsupplier_idChanged();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void Onsupply_dateChanging(System.DateTime value);
    partial void Onsupply_dateChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    #endregion
		
		public flower_supply()
		{
			this._supplier = default(EntityRef<supplier>);
			this._flower = default(EntityRef<flower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supply_date", DbType="DateTime NOT NULL")]
		public System.DateTime supply_date
		{
			get
			{
				return this._supply_date;
			}
			set
			{
				if ((this._supply_date != value))
				{
					this.Onsupply_dateChanging(value);
					this.SendPropertyChanging();
					this._supply_date = value;
					this.SendPropertyChanged("supply_date");
					this.Onsupply_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_flower_supply", Storage="_supplier", ThisKey="supplier_id", OtherKey="supplier_id", IsForeignKey=true)]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.flower_supplies.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.flower_supplies.Add(this);
						this._supplier_id = value.supplier_id;
					}
					else
					{
						this._supplier_id = default(string);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_supply", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.flower_supplies.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.flower_supplies.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flowers")]
	public partial class flower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _flower_id;
		
		private string _name;
		
		private string _description;
		
		private decimal _price;
		
		private string _status;
		
		private EntitySet<flower_category> _flower_categories;
		
		private EntitySet<flower_color> _flower_colors;
		
		private EntitySet<flower_image> _flower_images;
		
		private EntitySet<flower_occasion> _flower_occasions;
		
		private EntitySet<flower_style> _flower_styles;
		
		private EntitySet<flower_supply> _flower_supplies;
		
		private EntityRef<inventory> _inventory;
		
		private EntitySet<order_detail> _order_details;
		
		private EntitySet<promotion_flower> _promotion_flowers;
		
		private EntitySet<return_detail> _return_details;
		
		private EntitySet<review> _reviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public flower()
		{
			this._flower_categories = new EntitySet<flower_category>(new Action<flower_category>(this.attach_flower_categories), new Action<flower_category>(this.detach_flower_categories));
			this._flower_colors = new EntitySet<flower_color>(new Action<flower_color>(this.attach_flower_colors), new Action<flower_color>(this.detach_flower_colors));
			this._flower_images = new EntitySet<flower_image>(new Action<flower_image>(this.attach_flower_images), new Action<flower_image>(this.detach_flower_images));
			this._flower_occasions = new EntitySet<flower_occasion>(new Action<flower_occasion>(this.attach_flower_occasions), new Action<flower_occasion>(this.detach_flower_occasions));
			this._flower_styles = new EntitySet<flower_style>(new Action<flower_style>(this.attach_flower_styles), new Action<flower_style>(this.detach_flower_styles));
			this._flower_supplies = new EntitySet<flower_supply>(new Action<flower_supply>(this.attach_flower_supplies), new Action<flower_supply>(this.detach_flower_supplies));
			this._inventory = default(EntityRef<inventory>);
			this._order_details = new EntitySet<order_detail>(new Action<order_detail>(this.attach_order_details), new Action<order_detail>(this.detach_order_details));
			this._promotion_flowers = new EntitySet<promotion_flower>(new Action<promotion_flower>(this.attach_promotion_flowers), new Action<promotion_flower>(this.detach_promotion_flowers));
			this._return_details = new EntitySet<return_detail>(new Action<return_detail>(this.attach_return_details), new Action<return_detail>(this.detach_return_details));
			this._reviews = new EntitySet<review>(new Action<review>(this.attach_reviews), new Action<review>(this.detach_reviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_category", Storage="_flower_categories", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<flower_category> flower_categories
		{
			get
			{
				return this._flower_categories;
			}
			set
			{
				this._flower_categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_color", Storage="_flower_colors", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<flower_color> flower_colors
		{
			get
			{
				return this._flower_colors;
			}
			set
			{
				this._flower_colors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_image", Storage="_flower_images", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<flower_image> flower_images
		{
			get
			{
				return this._flower_images;
			}
			set
			{
				this._flower_images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_occasion", Storage="_flower_occasions", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<flower_occasion> flower_occasions
		{
			get
			{
				return this._flower_occasions;
			}
			set
			{
				this._flower_occasions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_style", Storage="_flower_styles", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<flower_style> flower_styles
		{
			get
			{
				return this._flower_styles;
			}
			set
			{
				this._flower_styles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_flower_supply", Storage="_flower_supplies", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<flower_supply> flower_supplies
		{
			get
			{
				return this._flower_supplies;
			}
			set
			{
				this._flower_supplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_inventory", Storage="_inventory", ThisKey="flower_id", OtherKey="flower_id", IsUnique=true, IsForeignKey=false)]
		public inventory inventory
		{
			get
			{
				return this._inventory.Entity;
			}
			set
			{
				inventory previousValue = this._inventory.Entity;
				if (((previousValue != value) 
							|| (this._inventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._inventory.Entity = null;
						previousValue.flower = null;
					}
					this._inventory.Entity = value;
					if ((value != null))
					{
						value.flower = this;
					}
					this.SendPropertyChanged("inventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_order_detail", Storage="_order_details", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<order_detail> order_details
		{
			get
			{
				return this._order_details;
			}
			set
			{
				this._order_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_promotion_flower", Storage="_promotion_flowers", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<promotion_flower> promotion_flowers
		{
			get
			{
				return this._promotion_flowers;
			}
			set
			{
				this._promotion_flowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_return_detail", Storage="_return_details", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<return_detail> return_details
		{
			get
			{
				return this._return_details;
			}
			set
			{
				this._return_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_review", Storage="_reviews", ThisKey="flower_id", OtherKey="flower_id")]
		public EntitySet<review> reviews
		{
			get
			{
				return this._reviews;
			}
			set
			{
				this._reviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flower_categories(flower_category entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_flower_categories(flower_category entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
		
		private void attach_flower_colors(flower_color entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_flower_colors(flower_color entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
		
		private void attach_flower_images(flower_image entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_flower_images(flower_image entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
		
		private void attach_flower_occasions(flower_occasion entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_flower_occasions(flower_occasion entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
		
		private void attach_flower_styles(flower_style entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_flower_styles(flower_style entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
		
		private void attach_flower_supplies(flower_supply entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_flower_supplies(flower_supply entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
		
		private void attach_order_details(order_detail entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_order_details(order_detail entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
		
		private void attach_promotion_flowers(promotion_flower entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_promotion_flowers(promotion_flower entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
		
		private void attach_return_details(return_detail entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_return_details(return_detail entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
		
		private void attach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventory")]
	public partial class inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _flower_id;
		
		private int _quantity;
		
		private System.DateTime _last_updated;
		
		private EntityRef<flower> _flower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void Onlast_updatedChanging(System.DateTime value);
    partial void Onlast_updatedChanged();
    #endregion
		
		public inventory()
		{
			this._flower = default(EntityRef<flower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated", DbType="DateTime NOT NULL")]
		public System.DateTime last_updated
		{
			get
			{
				return this._last_updated;
			}
			set
			{
				if ((this._last_updated != value))
				{
					this.Onlast_updatedChanging(value);
					this.SendPropertyChanging();
					this._last_updated = value;
					this.SendPropertyChanged("last_updated");
					this.Onlast_updatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_inventory", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.inventory = null;
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.inventory = this;
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.occasions")]
	public partial class occasion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _occasion_id;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<flower_occasion> _flower_occasions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onoccasion_idChanging(string value);
    partial void Onoccasion_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public occasion()
		{
			this._flower_occasions = new EntitySet<flower_occasion>(new Action<flower_occasion>(this.attach_flower_occasions), new Action<flower_occasion>(this.detach_flower_occasions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occasion_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string occasion_id
		{
			get
			{
				return this._occasion_id;
			}
			set
			{
				if ((this._occasion_id != value))
				{
					this.Onoccasion_idChanging(value);
					this.SendPropertyChanging();
					this._occasion_id = value;
					this.SendPropertyChanged("occasion_id");
					this.Onoccasion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="occasion_flower_occasion", Storage="_flower_occasions", ThisKey="occasion_id", OtherKey="occasion_id")]
		public EntitySet<flower_occasion> flower_occasions
		{
			get
			{
				return this._flower_occasions;
			}
			set
			{
				this._flower_occasions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flower_occasions(flower_occasion entity)
		{
			this.SendPropertyChanging();
			entity.occasion = this;
		}
		
		private void detach_flower_occasions(flower_occasion entity)
		{
			this.SendPropertyChanging();
			entity.occasion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.order_details")]
	public partial class order_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _order_id;
		
		private string _flower_id;
		
		private int _quantity;
		
		private decimal _price;
		
		private EntityRef<flower> _flower;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(string value);
    partial void Onorder_idChanged();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    #endregion
		
		public order_detail()
		{
			this._flower = default(EntityRef<flower>);
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_order_detail", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.order_details.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.order_details.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_order_detail", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.order_details.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.order_details.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(string);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _order_id;
		
		private string _customer_id;
		
		private System.DateTime _order_date;
		
		private decimal _total_amount;
		
		private string _shipping_address;
		
		private string _shipping_phone;
		
		private string _status;
		
		private string _payment_method;
		
		private EntitySet<order_detail> _order_details;
		
		private EntitySet<payment> _payments;
		
		private EntitySet<promotion_usage> _promotion_usages;
		
		private EntitySet<@return> _returns;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(string value);
    partial void Onorder_idChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onorder_dateChanging(System.DateTime value);
    partial void Onorder_dateChanged();
    partial void Ontotal_amountChanging(decimal value);
    partial void Ontotal_amountChanged();
    partial void Onshipping_addressChanging(string value);
    partial void Onshipping_addressChanged();
    partial void Onshipping_phoneChanging(string value);
    partial void Onshipping_phoneChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onpayment_methodChanging(string value);
    partial void Onpayment_methodChanged();
    #endregion
		
		public order()
		{
			this._order_details = new EntitySet<order_detail>(new Action<order_detail>(this.attach_order_details), new Action<order_detail>(this.detach_order_details));
			this._payments = new EntitySet<payment>(new Action<payment>(this.attach_payments), new Action<payment>(this.detach_payments));
			this._promotion_usages = new EntitySet<promotion_usage>(new Action<promotion_usage>(this.attach_promotion_usages), new Action<promotion_usage>(this.detach_promotion_usages));
			this._returns = new EntitySet<@return>(new Action<@return>(this.attach_returns), new Action<@return>(this.detach_returns));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="NVarChar(10)")]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime NOT NULL")]
		public System.DateTime order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipping_address", DbType="NVarChar(255)")]
		public string shipping_address
		{
			get
			{
				return this._shipping_address;
			}
			set
			{
				if ((this._shipping_address != value))
				{
					this.Onshipping_addressChanging(value);
					this.SendPropertyChanging();
					this._shipping_address = value;
					this.SendPropertyChanged("shipping_address");
					this.Onshipping_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipping_phone", DbType="NChar(12)")]
		public string shipping_phone
		{
			get
			{
				return this._shipping_phone;
			}
			set
			{
				if ((this._shipping_phone != value))
				{
					this.Onshipping_phoneChanging(value);
					this.SendPropertyChanging();
					this._shipping_phone = value;
					this.SendPropertyChanged("shipping_phone");
					this.Onshipping_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string payment_method
		{
			get
			{
				return this._payment_method;
			}
			set
			{
				if ((this._payment_method != value))
				{
					this.Onpayment_methodChanging(value);
					this.SendPropertyChanging();
					this._payment_method = value;
					this.SendPropertyChanged("payment_method");
					this.Onpayment_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_order_detail", Storage="_order_details", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<order_detail> order_details
		{
			get
			{
				return this._order_details;
			}
			set
			{
				this._order_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_payment", Storage="_payments", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<payment> payments
		{
			get
			{
				return this._payments;
			}
			set
			{
				this._payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_promotion_usage", Storage="_promotion_usages", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<promotion_usage> promotion_usages
		{
			get
			{
				return this._promotion_usages;
			}
			set
			{
				this._promotion_usages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_return", Storage="_returns", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<@return> returns
		{
			get
			{
				return this._returns;
			}
			set
			{
				this._returns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_order_details(order_detail entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_order_details(order_detail entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
		
		private void attach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
		
		private void attach_promotion_usages(promotion_usage entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_promotion_usages(promotion_usage entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
		
		private void attach_returns(@return entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_returns(@return entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payments")]
	public partial class payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _payment_id;
		
		private string _order_id;
		
		private decimal _amount;
		
		private System.DateTime _payment_date;
		
		private string _payment_method;
		
		private string _transaction_id;
		
		private string _status;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpayment_idChanging(string value);
    partial void Onpayment_idChanged();
    partial void Onorder_idChanging(string value);
    partial void Onorder_idChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Onpayment_dateChanging(System.DateTime value);
    partial void Onpayment_dateChanged();
    partial void Onpayment_methodChanging(string value);
    partial void Onpayment_methodChanged();
    partial void Ontransaction_idChanging(string value);
    partial void Ontransaction_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public payment()
		{
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="NVarChar(10)")]
		public string order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_date", DbType="DateTime NOT NULL")]
		public System.DateTime payment_date
		{
			get
			{
				return this._payment_date;
			}
			set
			{
				if ((this._payment_date != value))
				{
					this.Onpayment_dateChanging(value);
					this.SendPropertyChanging();
					this._payment_date = value;
					this.SendPropertyChanged("payment_date");
					this.Onpayment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string payment_method
		{
			get
			{
				return this._payment_method;
			}
			set
			{
				if ((this._payment_method != value))
				{
					this.Onpayment_methodChanging(value);
					this.SendPropertyChanging();
					this._payment_method = value;
					this.SendPropertyChanged("payment_method");
					this.Onpayment_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_id", DbType="NVarChar(10)")]
		public string transaction_id
		{
			get
			{
				return this._transaction_id;
			}
			set
			{
				if ((this._transaction_id != value))
				{
					this.Ontransaction_idChanging(value);
					this.SendPropertyChanging();
					this._transaction_id = value;
					this.SendPropertyChanged("transaction_id");
					this.Ontransaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_payment", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.payments.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.payments.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(string);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.promotion_flowers")]
	public partial class promotion_flower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _promotion_id;
		
		private string _flower_id;
		
		private string _discount_type;
		
		private System.Nullable<decimal> _discount_value;
		
		private EntityRef<flower> _flower;
		
		private EntityRef<promotion> _promotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpromotion_idChanging(string value);
    partial void Onpromotion_idChanged();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void Ondiscount_typeChanging(string value);
    partial void Ondiscount_typeChanged();
    partial void Ondiscount_valueChanging(System.Nullable<decimal> value);
    partial void Ondiscount_valueChanged();
    #endregion
		
		public promotion_flower()
		{
			this._flower = default(EntityRef<flower>);
			this._promotion = default(EntityRef<promotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_promotion_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string promotion_id
		{
			get
			{
				return this._promotion_id;
			}
			set
			{
				if ((this._promotion_id != value))
				{
					if (this._promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpromotion_idChanging(value);
					this.SendPropertyChanging();
					this._promotion_id = value;
					this.SendPropertyChanged("promotion_id");
					this.Onpromotion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_type", DbType="NVarChar(20)")]
		public string discount_type
		{
			get
			{
				return this._discount_type;
			}
			set
			{
				if ((this._discount_type != value))
				{
					this.Ondiscount_typeChanging(value);
					this.SendPropertyChanging();
					this._discount_type = value;
					this.SendPropertyChanged("discount_type");
					this.Ondiscount_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_value", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> discount_value
		{
			get
			{
				return this._discount_value;
			}
			set
			{
				if ((this._discount_value != value))
				{
					this.Ondiscount_valueChanging(value);
					this.SendPropertyChanging();
					this._discount_value = value;
					this.SendPropertyChanged("discount_value");
					this.Ondiscount_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_promotion_flower", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.promotion_flowers.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.promotion_flowers.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="promotion_promotion_flower", Storage="_promotion", ThisKey="promotion_id", OtherKey="promotion_id", IsForeignKey=true)]
		public promotion promotion
		{
			get
			{
				return this._promotion.Entity;
			}
			set
			{
				promotion previousValue = this._promotion.Entity;
				if (((previousValue != value) 
							|| (this._promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._promotion.Entity = null;
						previousValue.promotion_flowers.Remove(this);
					}
					this._promotion.Entity = value;
					if ((value != null))
					{
						value.promotion_flowers.Add(this);
						this._promotion_id = value.promotion_id;
					}
					else
					{
						this._promotion_id = default(string);
					}
					this.SendPropertyChanged("promotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.promotion_usage")]
	public partial class promotion_usage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _usage_id;
		
		private string _promotion_id;
		
		private string _order_id;
		
		private string _customer_id;
		
		private System.DateTime _used_date;
		
		private decimal _discount_amount;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<order> _order;
		
		private EntityRef<promotion> _promotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onusage_idChanging(string value);
    partial void Onusage_idChanged();
    partial void Onpromotion_idChanging(string value);
    partial void Onpromotion_idChanged();
    partial void Onorder_idChanging(string value);
    partial void Onorder_idChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onused_dateChanging(System.DateTime value);
    partial void Onused_dateChanged();
    partial void Ondiscount_amountChanging(decimal value);
    partial void Ondiscount_amountChanged();
    #endregion
		
		public promotion_usage()
		{
			this._customer = default(EntityRef<customer>);
			this._order = default(EntityRef<order>);
			this._promotion = default(EntityRef<promotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usage_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string usage_id
		{
			get
			{
				return this._usage_id;
			}
			set
			{
				if ((this._usage_id != value))
				{
					this.Onusage_idChanging(value);
					this.SendPropertyChanging();
					this._usage_id = value;
					this.SendPropertyChanged("usage_id");
					this.Onusage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_promotion_id", DbType="NVarChar(10)")]
		public string promotion_id
		{
			get
			{
				return this._promotion_id;
			}
			set
			{
				if ((this._promotion_id != value))
				{
					if (this._promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpromotion_idChanging(value);
					this.SendPropertyChanging();
					this._promotion_id = value;
					this.SendPropertyChanged("promotion_id");
					this.Onpromotion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="NVarChar(10)")]
		public string order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="NVarChar(10)")]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_used_date", DbType="DateTime NOT NULL")]
		public System.DateTime used_date
		{
			get
			{
				return this._used_date;
			}
			set
			{
				if ((this._used_date != value))
				{
					this.Onused_dateChanging(value);
					this.SendPropertyChanging();
					this._used_date = value;
					this.SendPropertyChanged("used_date");
					this.Onused_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal discount_amount
		{
			get
			{
				return this._discount_amount;
			}
			set
			{
				if ((this._discount_amount != value))
				{
					this.Ondiscount_amountChanging(value);
					this.SendPropertyChanging();
					this._discount_amount = value;
					this.SendPropertyChanged("discount_amount");
					this.Ondiscount_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_promotion_usage", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.promotion_usages.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.promotion_usages.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_promotion_usage", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.promotion_usages.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.promotion_usages.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(string);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="promotion_promotion_usage", Storage="_promotion", ThisKey="promotion_id", OtherKey="promotion_id", IsForeignKey=true)]
		public promotion promotion
		{
			get
			{
				return this._promotion.Entity;
			}
			set
			{
				promotion previousValue = this._promotion.Entity;
				if (((previousValue != value) 
							|| (this._promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._promotion.Entity = null;
						previousValue.promotion_usages.Remove(this);
					}
					this._promotion.Entity = value;
					if ((value != null))
					{
						value.promotion_usages.Add(this);
						this._promotion_id = value.promotion_id;
					}
					else
					{
						this._promotion_id = default(string);
					}
					this.SendPropertyChanged("promotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.promotions")]
	public partial class promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _promotion_id;
		
		private string _name;
		
		private string _description;
		
		private string _discount_type;
		
		private decimal _discount_value;
		
		private System.DateTime _start_date;
		
		private System.DateTime _end_date;
		
		private System.Nullable<decimal> _min_order_amount;
		
		private System.Nullable<decimal> _max_discount;
		
		private System.Nullable<int> _usage_limit;
		
		private System.Nullable<int> _used_count;
		
		private string _promo_code;
		
		private string _status;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private EntitySet<promotion_flower> _promotion_flowers;
		
		private EntitySet<promotion_usage> _promotion_usages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpromotion_idChanging(string value);
    partial void Onpromotion_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ondiscount_typeChanging(string value);
    partial void Ondiscount_typeChanged();
    partial void Ondiscount_valueChanging(decimal value);
    partial void Ondiscount_valueChanged();
    partial void Onstart_dateChanging(System.DateTime value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.DateTime value);
    partial void Onend_dateChanged();
    partial void Onmin_order_amountChanging(System.Nullable<decimal> value);
    partial void Onmin_order_amountChanged();
    partial void Onmax_discountChanging(System.Nullable<decimal> value);
    partial void Onmax_discountChanged();
    partial void Onusage_limitChanging(System.Nullable<int> value);
    partial void Onusage_limitChanged();
    partial void Onused_countChanging(System.Nullable<int> value);
    partial void Onused_countChanged();
    partial void Onpromo_codeChanging(string value);
    partial void Onpromo_codeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
		
		public promotion()
		{
			this._promotion_flowers = new EntitySet<promotion_flower>(new Action<promotion_flower>(this.attach_promotion_flowers), new Action<promotion_flower>(this.detach_promotion_flowers));
			this._promotion_usages = new EntitySet<promotion_usage>(new Action<promotion_usage>(this.attach_promotion_usages), new Action<promotion_usage>(this.detach_promotion_usages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_promotion_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string promotion_id
		{
			get
			{
				return this._promotion_id;
			}
			set
			{
				if ((this._promotion_id != value))
				{
					this.Onpromotion_idChanging(value);
					this.SendPropertyChanging();
					this._promotion_id = value;
					this.SendPropertyChanged("promotion_id");
					this.Onpromotion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string discount_type
		{
			get
			{
				return this._discount_type;
			}
			set
			{
				if ((this._discount_type != value))
				{
					this.Ondiscount_typeChanging(value);
					this.SendPropertyChanging();
					this._discount_type = value;
					this.SendPropertyChanged("discount_type");
					this.Ondiscount_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_value", DbType="Decimal(10,2) NOT NULL")]
		public decimal discount_value
		{
			get
			{
				return this._discount_value;
			}
			set
			{
				if ((this._discount_value != value))
				{
					this.Ondiscount_valueChanging(value);
					this.SendPropertyChanging();
					this._discount_value = value;
					this.SendPropertyChanged("discount_value");
					this.Ondiscount_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="DateTime NOT NULL")]
		public System.DateTime start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="DateTime NOT NULL")]
		public System.DateTime end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_order_amount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> min_order_amount
		{
			get
			{
				return this._min_order_amount;
			}
			set
			{
				if ((this._min_order_amount != value))
				{
					this.Onmin_order_amountChanging(value);
					this.SendPropertyChanging();
					this._min_order_amount = value;
					this.SendPropertyChanged("min_order_amount");
					this.Onmin_order_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_discount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> max_discount
		{
			get
			{
				return this._max_discount;
			}
			set
			{
				if ((this._max_discount != value))
				{
					this.Onmax_discountChanging(value);
					this.SendPropertyChanging();
					this._max_discount = value;
					this.SendPropertyChanged("max_discount");
					this.Onmax_discountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usage_limit", DbType="Int")]
		public System.Nullable<int> usage_limit
		{
			get
			{
				return this._usage_limit;
			}
			set
			{
				if ((this._usage_limit != value))
				{
					this.Onusage_limitChanging(value);
					this.SendPropertyChanging();
					this._usage_limit = value;
					this.SendPropertyChanged("usage_limit");
					this.Onusage_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_used_count", DbType="Int")]
		public System.Nullable<int> used_count
		{
			get
			{
				return this._used_count;
			}
			set
			{
				if ((this._used_count != value))
				{
					this.Onused_countChanging(value);
					this.SendPropertyChanging();
					this._used_count = value;
					this.SendPropertyChanged("used_count");
					this.Onused_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_promo_code", DbType="NVarChar(50)")]
		public string promo_code
		{
			get
			{
				return this._promo_code;
			}
			set
			{
				if ((this._promo_code != value))
				{
					this.Onpromo_codeChanging(value);
					this.SendPropertyChanging();
					this._promo_code = value;
					this.SendPropertyChanged("promo_code");
					this.Onpromo_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="promotion_promotion_flower", Storage="_promotion_flowers", ThisKey="promotion_id", OtherKey="promotion_id")]
		public EntitySet<promotion_flower> promotion_flowers
		{
			get
			{
				return this._promotion_flowers;
			}
			set
			{
				this._promotion_flowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="promotion_promotion_usage", Storage="_promotion_usages", ThisKey="promotion_id", OtherKey="promotion_id")]
		public EntitySet<promotion_usage> promotion_usages
		{
			get
			{
				return this._promotion_usages;
			}
			set
			{
				this._promotion_usages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_promotion_flowers(promotion_flower entity)
		{
			this.SendPropertyChanging();
			entity.promotion = this;
		}
		
		private void detach_promotion_flowers(promotion_flower entity)
		{
			this.SendPropertyChanging();
			entity.promotion = null;
		}
		
		private void attach_promotion_usages(promotion_usage entity)
		{
			this.SendPropertyChanging();
			entity.promotion = this;
		}
		
		private void detach_promotion_usages(promotion_usage entity)
		{
			this.SendPropertyChanging();
			entity.promotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.return_details")]
	public partial class return_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _return_id;
		
		private string _flower_id;
		
		private int _quantity;
		
		private decimal _return_amount;
		
		private EntityRef<flower> _flower;
		
		private EntityRef<@return> _return;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreturn_idChanging(string value);
    partial void Onreturn_idChanged();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void Onreturn_amountChanging(decimal value);
    partial void Onreturn_amountChanged();
    #endregion
		
		public return_detail()
		{
			this._flower = default(EntityRef<flower>);
			this._return = default(EntityRef<@return>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string return_id
		{
			get
			{
				return this._return_id;
			}
			set
			{
				if ((this._return_id != value))
				{
					if (this._return.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreturn_idChanging(value);
					this.SendPropertyChanging();
					this._return_id = value;
					this.SendPropertyChanged("return_id");
					this.Onreturn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal return_amount
		{
			get
			{
				return this._return_amount;
			}
			set
			{
				if ((this._return_amount != value))
				{
					this.Onreturn_amountChanging(value);
					this.SendPropertyChanging();
					this._return_amount = value;
					this.SendPropertyChanged("return_amount");
					this.Onreturn_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_return_detail", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.return_details.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.return_details.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="return_return_detail", Storage="_return", ThisKey="return_id", OtherKey="return_id", IsForeignKey=true)]
		public @return @return
		{
			get
			{
				return this._return.Entity;
			}
			set
			{
				@return previousValue = this._return.Entity;
				if (((previousValue != value) 
							|| (this._return.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._return.Entity = null;
						previousValue.return_details.Remove(this);
					}
					this._return.Entity = value;
					if ((value != null))
					{
						value.return_details.Add(this);
						this._return_id = value.return_id;
					}
					else
					{
						this._return_id = default(string);
					}
					this.SendPropertyChanged("@return");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[returns]")]
	public partial class @return : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _return_id;
		
		private string _order_id;
		
		private string _customer_id;
		
		private System.DateTime _return_date;
		
		private string _reason;
		
		private string _status;
		
		private string _processed_by;
		
		private EntitySet<return_detail> _return_details;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreturn_idChanging(string value);
    partial void Onreturn_idChanged();
    partial void Onorder_idChanging(string value);
    partial void Onorder_idChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onreturn_dateChanging(System.DateTime value);
    partial void Onreturn_dateChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onprocessed_byChanging(string value);
    partial void Onprocessed_byChanged();
    #endregion
		
		public @return()
		{
			this._return_details = new EntitySet<return_detail>(new Action<return_detail>(this.attach_return_details), new Action<return_detail>(this.detach_return_details));
			this._customer = default(EntityRef<customer>);
			this._employee = default(EntityRef<employee>);
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string return_id
		{
			get
			{
				return this._return_id;
			}
			set
			{
				if ((this._return_id != value))
				{
					this.Onreturn_idChanging(value);
					this.SendPropertyChanging();
					this._return_id = value;
					this.SendPropertyChanged("return_id");
					this.Onreturn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="NVarChar(10)")]
		public string order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="NVarChar(10)")]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_date", DbType="DateTime NOT NULL")]
		public System.DateTime return_date
		{
			get
			{
				return this._return_date;
			}
			set
			{
				if ((this._return_date != value))
				{
					this.Onreturn_dateChanging(value);
					this.SendPropertyChanging();
					this._return_date = value;
					this.SendPropertyChanged("return_date");
					this.Onreturn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="NVarChar(255)")]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processed_by", DbType="NVarChar(10)")]
		public string processed_by
		{
			get
			{
				return this._processed_by;
			}
			set
			{
				if ((this._processed_by != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprocessed_byChanging(value);
					this.SendPropertyChanging();
					this._processed_by = value;
					this.SendPropertyChanged("processed_by");
					this.Onprocessed_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="return_return_detail", Storage="_return_details", ThisKey="return_id", OtherKey="return_id")]
		public EntitySet<return_detail> return_details
		{
			get
			{
				return this._return_details;
			}
			set
			{
				this._return_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_return", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.returns.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.returns.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_return", Storage="_employee", ThisKey="processed_by", OtherKey="employee_id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.returns.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.returns.Add(this);
						this._processed_by = value.employee_id;
					}
					else
					{
						this._processed_by = default(string);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_return", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.returns.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.returns.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(string);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_return_details(return_detail entity)
		{
			this.SendPropertyChanging();
			entity.@return = this;
		}
		
		private void detach_return_details(return_detail entity)
		{
			this.SendPropertyChanging();
			entity.@return = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reviews")]
	public partial class review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _review_id;
		
		private string _customer_id;
		
		private string _flower_id;
		
		private System.Nullable<int> _rating;
		
		private string _comment;
		
		private System.DateTime _review_date;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<flower> _flower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreview_idChanging(string value);
    partial void Onreview_idChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onflower_idChanging(string value);
    partial void Onflower_idChanged();
    partial void OnratingChanging(System.Nullable<int> value);
    partial void OnratingChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void Onreview_dateChanging(System.DateTime value);
    partial void Onreview_dateChanged();
    #endregion
		
		public review()
		{
			this._customer = default(EntityRef<customer>);
			this._flower = default(EntityRef<flower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string review_id
		{
			get
			{
				return this._review_id;
			}
			set
			{
				if ((this._review_id != value))
				{
					this.Onreview_idChanging(value);
					this.SendPropertyChanging();
					this._review_id = value;
					this.SendPropertyChanged("review_id");
					this.Onreview_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="NVarChar(10)")]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_id", DbType="NVarChar(10)")]
		public string flower_id
		{
			get
			{
				return this._flower_id;
			}
			set
			{
				if ((this._flower_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onflower_idChanging(value);
					this.SendPropertyChanging();
					this._flower_id = value;
					this.SendPropertyChanged("flower_id");
					this.Onflower_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Int")]
		public System.Nullable<int> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(255)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_date", DbType="DateTime NOT NULL")]
		public System.DateTime review_date
		{
			get
			{
				return this._review_date;
			}
			set
			{
				if ((this._review_date != value))
				{
					this.Onreview_dateChanging(value);
					this.SendPropertyChanging();
					this._review_date = value;
					this.SendPropertyChanged("review_date");
					this.Onreview_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_review", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.reviews.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.reviews.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_review", Storage="_flower", ThisKey="flower_id", OtherKey="flower_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.reviews.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.reviews.Add(this);
						this._flower_id = value.flower_id;
					}
					else
					{
						this._flower_id = default(string);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.styles")]
	public partial class style : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _style_id;
		
		private string _name;
		
		private EntitySet<flower_style> _flower_styles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstyle_idChanging(string value);
    partial void Onstyle_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public style()
		{
			this._flower_styles = new EntitySet<flower_style>(new Action<flower_style>(this.attach_flower_styles), new Action<flower_style>(this.detach_flower_styles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_style_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string style_id
		{
			get
			{
				return this._style_id;
			}
			set
			{
				if ((this._style_id != value))
				{
					this.Onstyle_idChanging(value);
					this.SendPropertyChanging();
					this._style_id = value;
					this.SendPropertyChanged("style_id");
					this.Onstyle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="style_flower_style", Storage="_flower_styles", ThisKey="style_id", OtherKey="style_id")]
		public EntitySet<flower_style> flower_styles
		{
			get
			{
				return this._flower_styles;
			}
			set
			{
				this._flower_styles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flower_styles(flower_style entity)
		{
			this.SendPropertyChanging();
			entity.style = this;
		}
		
		private void detach_flower_styles(flower_style entity)
		{
			this.SendPropertyChanging();
			entity.style = null;
		}
	}
}
#pragma warning restore 1591
